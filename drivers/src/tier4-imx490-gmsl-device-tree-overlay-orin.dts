/dts-v1/;
/plugin/;


//CAM0_RST_L 7 * 8 + 3, 0x3B
//CAM0_PWDN 7 * 8 + 6, 0x3E
//CAMERA_I2C_MUX_BUS 0x1E + x
//GPIO_ACTIVE_HIGH 0
//CAM1_RST_L 20 * 8 + 1, 0xA1

/ {
  overlay-name = "TIERIV IMX490 GMSL2 Camera Device Tree Overlay";
  jetson-header-name = "Jetson AGX CSI Connector";
  compatible = "nvidia,p3737-0000+p3701-0000", "nvidia,tegra234", "nvidia,tegra23x";

fragment@0{
    target-path = "/tegra-capture-vi";
    __overlay__ {
      num-channels = <6>;
    };
  };

  //diff view    
fragment@1{
    target-path = "/tegra-capture-vi/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };

fragment@2{
    target-path = "/tegra-capture-vi/ports/port@0/endpoint";
    __overlay__ {
      status = "okay";
      port-index = <0>;
      vc-id = <0>;
      bus-width = <4>;
    };
  };

fragment@3{
    target-path = "/tegra-capture-vi/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@4{
    target-path = "/tegra-capture-vi/ports/port@1/endpoint";
    __overlay__ {
      status = "okay";
      port-index = <0>;
      vc-id = <1>;
      bus-width = <4>;
    };
  };
  
fragment@5{
    target-path = "/tegra-capture-vi/ports/port@2";
    __overlay__ {
      status = "okay";
    
  };
  };
  
fragment@6{
    target-path = "/tegra-capture-vi/ports/port@2/endpoint";
    __overlay__ {
      status = "okay";
      vc-id = <0>;
      port-index = <2>;
      bus-width = <4>;
    };
  };
  
fragment@7{
    target-path = "/tegra-capture-vi/ports/port@3";
    __overlay__ {
      status = "okay";
    };
  };
  
fragment@8{
    target-path = "/tegra-capture-vi/ports/port@3/endpoint";
    __overlay__ {
      status = "okay";
      vc-id = <1>;
      port-index = <2>;
      bus-width = <4>;
    };
  };

fragment@9{
    target-path = "/tegra-capture-vi/ports/port@4";
    __overlay__ {
      status = "okay";
    
  };
  };
  
fragment@10{
    target-path = "/tegra-capture-vi/ports/port@4/endpoint";
    __overlay__ {
      status = "okay";
      vc-id = <0>;
      port-index = <4>;
      bus-width = <4>;
    };
  };

fragment@11{
    target-path = "/tegra-capture-vi/ports/port@5";
    __overlay__ {
      status = "okay";
    
    };
  };
  
fragment@12{
    target-path = "/tegra-capture-vi/ports/port@5/endpoint";
    __overlay__ {
      status = "okay";
      vc-id = <1>;
      port-index = <4>;
      bus-width = <4>;
    };
  };

/**********************/


fragment@13{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@14{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@15{
    // target = csi_in0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@0/endpoint@0";
    __overlay__ {
      status = "okay";
      port-index = <0x00>;
      bus-width = <4>;
      remote-endpoint = <&imx490_out0>;
    };
  };

fragment@16{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@17{
    // target = csi_out0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@0/ports/port@1/endpoint@1";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in0>;
    };
  };

  // channel@1
fragment@18{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1";
    __overlay__ {
      status = "okay";
    };
  };
fragment@19{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@20{
    // target = csi_in1
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@0/endpoint@2";
    __overlay__ {
      status = "okay";
      port-index = <0x00>;
      bus-width = <0x04>;
      remote-endpoint = <&imx490_out1>;
    };
  };

fragment@21{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@22{
    // target = csi_out1
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@1/ports/port@1/endpoint@3";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in1>;
    };
  };

  // channel@2
fragment@23{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@2";
    __overlay__ {
      status = "okay";
    };
  };
fragment@24{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@2/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@25{
    // target = csi_in0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@2/ports/port@0/endpoint@4";
    __overlay__ {
      status = "okay";
      port-index = <2>;
      bus-width = <4>;
      remote-endpoint = <&imx490_out2>;
    };
  };

fragment@26{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@2/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@27{
    // target = csi_out0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@2/ports/port@1/endpoint@5";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in2>;
    };
  };

  // channel@3
fragment@28{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@3";
    __overlay__ {
      status = "okay";
    };
  };
fragment@29{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@3/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@30{
    // target = csi_in0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@3/ports/port@0/endpoint@6";
    __overlay__ {
      status = "okay";
      port-index = <2>;
      bus-width = <4>;
      remote-endpoint = <&imx490_out3>;
    };
  };

fragment@31{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@3/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@32{
    // target = csi_out0
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@3/ports/port@1/endpoint@7";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in3>;
    };
  };

  // channel@6-7
fragment@33{
    target-path = "/host1x@13e00000/nvcsi@15a00000";
    __overlay__ {
      num-channels = <6>;
    };
  };

  // channel@4
fragment@34{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@4";
    __overlay__ {
      status = "okay";
    };
  };
fragment@35{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@4/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@36{
    // target = csi_in4
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@4/ports/port@0/endpoint@8";
    __overlay__ {
      status = "okay";
      port-index = <4>;
      bus-width = <4>;
      remote-endpoint = <&imx490_out4>;
    };
  };

fragment@37{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@4/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@38{
    // target = csi_out4
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@4/ports/port@1/endpoint@9";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in4>;
    };
  };

  // channel@5
fragment@39{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@5";
    __overlay__ {
      status = "okay";
    };
  };
fragment@40{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@5/ports/port@0";
    __overlay__ {
      status = "okay";
    };
  };
fragment@41{
    // target = csi_in5
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@5/ports/port@0/endpoint@10";
    __overlay__ {
      status = "okay";
      port-index = <4>;
      bus-width = <4>;
      remote-endpoint = <&imx490_out5>;
    };
  };

fragment@42{
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@5/ports/port@1";
    __overlay__ {
      status = "okay";
    };
  };

fragment@43{
    // target = csi_out5
    target-path = "/host1x@13e00000/nvcsi@15a00000/channel@5/ports/port@1/endpoint@11";
    __overlay__ {
      status = "okay";
      remote-endpoint = <&vi_in5>;
    };
  };

  ////////////////////////////////////
fragment@44{
    //tcp
    target-path = "/tegra-camera-platform";
    __overlay__ {
      num_csi_lanes = <0x04>;
      max_lane_speed = <4000000>;
    };
  };




fragment@45{
    target-path = "/tegra-camera-platform/modules/module0";
    __overlay__ {
      badge = "imx490_rear";
      position = "rear";
      orientation = "1";
      status = "okay";
    };
  };

fragment@46{
    target-path = "/tegra-camera-platform/modules/module0/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 30-002b";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@0/imx490_a@2b";
    };
  };

fragment@47{
    target-path = "/tegra-camera-platform/modules/module1";
    __overlay__ {
      badge = "imx490_front";
      position = "front";
      orientation = "1";
      status = "okay";
    };
  };

fragment@48{
    target-path = "/tegra-camera-platform/modules/module1/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 30-002c";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@0/imx490_b@2c";
    };
  };

fragment@49{
    target-path = "/tegra-camera-platform/modules/module2";
    __overlay__ {
      badge = "imx490_topright";
      position = "topright";
      orientation = "1";
      status = "okay";
    };
  };

fragment@50{
    target-path = "/tegra-camera-platform/modules/module2/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 31-002b";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@1/imx490_c@2b";
    };
  };

fragment@51{
    target-path = "/tegra-camera-platform/modules/module3";
    __overlay__ {
      badge = "mx490_bottomright";
      position = "bottomright";
      orientation = "1";
      status = "okay";
    };
  };

fragment@52{
    target-path = "/tegra-camera-platform/modules/module3/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 31-002c";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@1/imx490_d@2c";
    };
  };

fragment@53{
    target-path = "/tegra-camera-platform/modules/module4";
    __overlay__ {
      badge = "imx490_topleft";
      position = "topleft";
      orientation = "1";
      status = "okay";
    };
  };

fragment@54{
    target-path = "/tegra-camera-platform/modules/module4/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 32-002b";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@2/imx490_e@2b";
    };
  };

fragment@55{
    target-path = "/tegra-camera-platform/modules/module5";
    __overlay__ {
      badge = "imx490_centerright";
      position = "centerright";
      orientation = "1";
      status = "okay";
    };
  };

fragment@56{
    target-path = "/tegra-camera-platform/modules/module5/drivernode0";
    __overlay__ {
      status = "okay";
      pcl_id = "v4l2_sensor";
      devname = "imx490 32-002c";
      proc-device-tree = "/proc/device-tree/i2c@3180000/tca9546@70/i2c@2/imx490_f@2c";
    };
  };

  // cam
fragment@57{
    //cami2c/i2c@0
    target-path = "/i2c@3180000/tca9546@70";
    __overlay__ {
      status = "okay";
    };
  };

fragment@58{
    //cami2c/i2c@0
    target-path = "/i2c@3180000/tca9546@70/i2c@0/max9296@48";
    __overlay__ {
      status = "okay";
     compatible = "nvidia,tier4_max9296";
    };
  };

fragment@59{
    //cami2c/i2c@0
    target-path = "/i2c@3180000/tca9546@70/i2c@0/max9295_prim@62";
    __overlay__ {
      status = "okay";
      compatible = "nvidia,tier4_max9295";
    };
  };

fragment@60{
    //cami2c/i2c@0
    target-path = "/i2c@3180000/tca9546@70/i2c@0/max9295_b@60";
    __overlay__ {
      status = "okay";
      compatible = "nvidia,tier4_max9295";
      nvidia,gmsl-dser-device = <&dser>;
    };
  };

fragment@61{
    //cami2c/i2c@0
    target-path = "/i2c@3180000/tca9546@70/i2c@0";
    __overlay__ {
      reg = <0>;
      i2c-mux,deselect-on-exit;
      #address-cells = <0x01>;
      #size-cells = <0x00>;

      max9295_ser_a_0: max9295_a@42 {
        compatible = "nvidia,tier4_max9295";
        status = "okay";
        reg = <0x42>;
        nvidia,gmsl-dser-device = <&max9296_dser>;
      };
   
      isp_prim_a: gw5300_prim@6d {
        compatible = "nvidia,tier4_gw5300";
        status = "okay";
        reg = <0x6d>;
        is-prim-isp;
      };
      isp_a: gw5300_a@6e {
        compatible = "nvidia,tier4_gw5300";
        status = "okay";
        reg = <0x6e>;
      };
      isp_b: gw5300_b@6f {
        compatible = "nvidia,tier4_gw5300";
         status = "okay";
         reg = <0x6f>;
      };


      imx490_a@2b {
        status = "okay";
        def-addr = <0x1a>;
        mclk = "extperiph1";
        clocks = <&bpmp 36U>, <&bpmp 36U>;
        clock-names = "extperiph1", "pllp_grtba";
        nvidia,isp-device = <&isp_a>;           // for C2 camera
        nvidia,gmsl-ser-device = <&max9295_ser_a_0>;
        nvidia,gmsl-dser-device = <&max9296_dser>;

        // common modul;e
        compatible = "nvidia,tier4_imx490";
        reg = <0x2b>;

        /* Physical dimensions of sensor */
        physical_w = "15.0";
        physical_h = "12.5";
        reg_mux = <0>;
        sensor_model ="imx490";

        fsync-mode = "false";

        distortion-correction = "false";

        auto-exposure = "true";

        /* Defines number of frames to be dropped by driver internally after applying */
        /* sensor crop settings. Some sensors send corrupt frames after applying */
        /* crop co-ordinates */
        post_crop_frame_drop = "0";

        /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
        use_decibel_gain = "true";

        /* enable CID_SENSOR_MODE_ID for sensor modes selection */
        use_sensor_mode_id = "true";

        mode0 {
          /*mode imx490_MODE_1920X1860_CROP_30FPS*/
          mclk_khz = "24000";
          num_lanes = "4";
          tegra_sinterface = "serial_a";
          vc_id = "0";
          discontinuous_clk = "no";
          dpcm_enable = "false";
          cil_settletime = "0";
          dynamic_pixel_bit_depth = "16";
          csi_pixel_bit_depth = "16";
          mode_type = "yuv";
          pixel_phase = "uyvy";

          active_w = "2880";
          active_h = "1860";
          readout_orientation = "0";
          line_length = "2250";
          inherent_gain = "1";

          pix_clk_hz = "757"; //not use
//          serdes_pix_clk_hz =  "237500000";
          serdes_pix_clk_hz =  "375000000";

          gain_factor = "10";
          min_gain_val = "0";                       /* dB */
          max_gain_val = "300";                         /* dB */
          step_gain_val = "3";                      /* 0.3 */
          default_gain = "0";
          min_hdr_ratio = "1";
          max_hdr_ratio = "1";
          framerate_factor = "1000000";
          min_framerate = "30000000";
          max_framerate = "30000000";
          step_framerate = "1";
          default_framerate = "30000000";
          exposure_factor = "1000000";
          min_exp_time = "24";                      /* us 1 line */
          max_exp_time = "33333";
          step_exp_time = "1";
          default_exp_time = "33333";                   /* us */
          embedded_metadata_height = "0";
        };
        ports {
          #address-cells = <1>;
          #size-cells = <0>;
          port@0 {
            reg = <0>;
            imx490_out0: endpoint {
              vc-id = <0>;
              port-index = <0>;
              bus-width = <4>;
              remote-endpoint = <&csi_in0>;
            };
          };
        };

        gmsl-link {
          src-csi-port = "b";           /* Port at which sensor is connected to its serializer device. */
          dst-csi-port = "a";           /* Destination CSI port on the Jetson side, connected at deserializer. */
          serdes-csi-link = "a";        /* GMSL link sensor/serializer connected */
          csi-mode = "1x4";             /*  to sensor CSI mode. */
          st-vc = <0>;                  /* Sensor source default VC ID: 0 unless overridden by sensor. */
          vc-id = <0>;                  /* Destination VC ID, assigned to sensor stream by deserializer. */
          num-lanes=<4>;                /* Number of CSI lanes used. */
          streams = "ued-u1", "yuv8";   /* Types of streams sensor is streaming. */
        };
      };

      imx490_b@2c {
        status = "okay";
        def-addr = <0x1a>;
        /* Define any required hw resources needed by driver */
        /* ie. clocks, io pins, power sources */
        clocks = <&bpmp 36U>, <&bpmp 36U>;
        clock-names = "extperiph1", "pllp_grtba";
        mclk = "extperiph1";
        nvidia,isp-device = <&isp_b>;           // for C2 camera
        nvidia,gmsl-ser-device = <&max9295_ser1>;
        nvidia,gmsl-dser-device = <&max9296_dser>;

        compatible = "nvidia,tier4_imx490";
        reg = <0x2c>;

        /* Physical dimensions of sensor */
        physical_w = "15.0";
        physical_h = "12.5";
        reg_mux = <0>;
        sensor_model ="imx490";

        fsync-mode = "false";

        distortion-correction = "false";

        auto-exposure = "true";

        /* Defines number of frames to be dropped by driver internally after applying */
        /* sensor crop settings. Some sensors send corrupt frames after applying */
        /* crop co-ordinates */
        post_crop_frame_drop = "0";

        /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
        use_decibel_gain = "true";

        /* enable CID_SENSOR_MODE_ID for sensor modes selection */
        use_sensor_mode_id = "true";

        mode0 {
          /*mode imx490_MODE_2880X1860_CROP_30FPS*/
          mclk_khz = "24000";
          num_lanes = "4";
          tegra_sinterface = "serial_b";
          vc_id = "1";
          discontinuous_clk = "no";
          dpcm_enable = "false";
          cil_settletime = "0";
          dynamic_pixel_bit_depth = "16";
          csi_pixel_bit_depth = "16";
          mode_type = "yuv";
          pixel_phase = "uyvy";

          active_w = "2880";
          active_h = "1860";
          readout_orientation = "0";
          line_length = "2250";
          inherent_gain = "1";

          pix_clk_hz = "757"; //not use
//          serdes_pix_clk_hz =  "237500000";
          serdes_pix_clk_hz =  "375000000";
          
          gain_factor = "10";
          min_gain_val = "0";                           /* dB */
          max_gain_val = "300";                             /* dB */
          step_gain_val = "3";                          /* 0.3 */
          default_gain = "0";
          min_hdr_ratio = "1";
          max_hdr_ratio = "1";
          framerate_factor = "1000000";
          min_framerate = "30000000";
          max_framerate = "30000000";
          step_framerate = "1";
          default_framerate = "30000000";
          exposure_factor = "1000000";
          min_exp_time = "24";                          /* us 1 line */
          max_exp_time = "33333";
          step_exp_time = "1";
          default_exp_time = "33333";                       /* us */
          embedded_metadata_height = "0";
        };
        ports {
          #address-cells = <1>;
          #size-cells = <0>;
          port@0 {
            reg = <0>;
            imx490_out1: endpoint {
              vc-id = <1>;
              port-index = <0>;
              bus-width = <4>;
              remote-endpoint = <&csi_in1>;
            };
          };
        };
        gmsl-link {
          src-csi-port = "b";
          dst-csi-port = "a";
          serdes-csi-link = "b";
          csi-mode = "1x4";
          st-vc = <0>;
          vc-id = <1>;
          num-lanes=<4>;
          streams = "ued-u1","yuv8";
        };
      };
    };
  };

fragment@62{
    //target-path = "/i2c@3180000/tca9546@70";
    target= <&tca9546_70>;
    __overlay__ {
      i2c@1 {
        reg = <1>;
        i2c-mux,deselect-on-exit;
        #address-cells = <0x01>;
        #size-cells = <0x00>;

        max9296_dser_b: max9296@48 {
          compatible = "nvidia,tier4_max9296";
          status = "okay";
          reg = <0x48>;
          csi-mode = "2x4";
          max-src = <2>;
          //reset-gpios = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
          reset-gpios = <&tegra_main_gpio 0x3E 0x0>;
        };
        max9295_prim@62 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x62>;
          is-prim-ser;
        };
        max9295_ser_b_0: max9295_a@42 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x42>;
          nvidia,gmsl-dser-device = <&max9296_dser_b>;
        };
        max9295_ser_b_1: max9295_b@60 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x60>;
          nvidia,gmsl-dser-device = <&max9296_dser_b>;
        };
        isp_d: gw5300_b@6f {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6f>;
        };
        isp_c: gw5300_a@6e {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6e>;
        };
        isp_prim_b: gw5300_prim@6d {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6d>;
          is-prim-isp;
        };
  
        imx490_d@2c {
          compatible = "nvidia,tier4_imx490";
          reg = <0x2c>;
          status = "okay";

          def-addr = <0x1a>;
          /* Define any required hw resources needed by driver */
          /* ie. clocks, io pins, power sources */
          clocks = <&bpmp 36U>,
          <&bpmp 36U>;
          clock-names = "extperiph1", "pllp_grtba";
          mclk = "extperiph1";
          nvidia,isp-device = <&isp_d>;           // for C2 camera
          nvidia,gmsl-ser-device = <&max9295_ser_b_1>;
          nvidia,gmsl-dser-device = <&max9296_dser_b>;

          /* Physical dimensions of sensor */
          physical_w = "15.0";
          physical_h = "12.5";
          reg_mux = <1>;
          sensor_model ="imx490";

          fsync-mode = "false";

          distortion-correction = "false";

          auto-exposure = "true";

          /* Defines number of frames to be dropped by driver internally after applying */
          /* sensor crop settings. Some sensors send corrupt frames after applying */
          /* crop co-ordinates */
          post_crop_frame_drop = "0";

          /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
          use_decibel_gain = "true";

          /* enable CID_SENSOR_MODE_ID for sensor modes selection */
          use_sensor_mode_id = "true";

          mode0 {
            /*mode imx490_MODE_2880X1860_CROP_30FPS*/
            mclk_khz = "24000";
            num_lanes = "4";
            tegra_sinterface = "serial_d";
            vc_id = "1";
            discontinuous_clk = "no";
            dpcm_enable = "false";
            cil_settletime = "0";
            dynamic_pixel_bit_depth = "16";
            csi_pixel_bit_depth = "16";
            mode_type = "yuv";
            pixel_phase = "uyvy";

            active_w = "2880";
            active_h = "1860";
            readout_orientation = "0";
            line_length = "2250";
            inherent_gain = "1";
            
            pix_clk_hz = "757"; //not use
//            serdes_pix_clk_hz =  "237500000";
            serdes_pix_clk_hz =  "375000000";

            gain_factor = "10";
            min_gain_val = "0"; /* dB */
            max_gain_val = "300"; /* dB */
            step_gain_val = "3"; /* 0.3 */
            default_gain = "0";
            min_hdr_ratio = "1";
            max_hdr_ratio = "1";
            framerate_factor = "1000000";
            min_framerate = "30000000";
            max_framerate = "30000000";
            step_framerate = "1";
            default_framerate = "30000000";
            exposure_factor = "1000000";
            min_exp_time = "24"; /* us 1 line */
            max_exp_time = "33333";
            step_exp_time = "1";
            default_exp_time = "33333";/* us */
            embedded_metadata_height = "0";
          };

          ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
              reg = <0>;
              imx490_out3: endpoint {
                vc-id = <1>;
                port-index = <2>;
                bus-width = <4>;
                remote-endpoint = <&csi_in3>;
              };
            };
          };
          gmsl-link {
            src-csi-port = "b";
            dst-csi-port = "a";
            serdes-csi-link = "b";
            csi-mode = "1x4";
            st-vc = <0>;
            vc-id = <1>;
            num-lanes=<4>;
            streams = "ued-u1","yuv8";
          };
        };
      
        imx490_c@2b {
          status = "okay";
          def-addr = <0x1a>;
          mclk = "extperiph1";
          clocks = <&bpmp 36U>, <&bpmp 36U>;
          clock-names = "extperiph1", "pllp_grtba";
          nvidia,isp-device = <&isp_c>;           // for C2 camera
          nvidia,gmsl-ser-device = <&max9295_ser_b_0>;
          nvidia,gmsl-dser-device = <&max9296_dser_b>;

          // common modul;e
          compatible = "nvidia,tier4_imx490";
          reg = <0x2b>;

          /* Physical dimensions of sensor */
          physical_w = "15.0";
          physical_h = "12.5";
          reg_mux = <1>;
          sensor_model ="imx490";

          fsync-mode = "false";

          distortion-correction = "false";

          auto-exposure = "true";

          /* Defines number of frames to be dropped by driver internally after applying */
          /* sensor crop settings. Some sensors send corrupt frames after applying */
          /* crop co-ordinates */
          post_crop_frame_drop = "0";

          /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
          use_decibel_gain = "true";

          /* enable CID_SENSOR_MODE_ID for sensor modes selection */
          use_sensor_mode_id = "true";

          mode0 {
            /*mode imx490_MODE_1920X1860_CROP_30FPS*/
            mclk_khz = "24000";
            num_lanes = "4";
            tegra_sinterface = "serial_c";
            vc_id = "0";
            discontinuous_clk = "no";
            dpcm_enable = "false";
            cil_settletime = "0";
            dynamic_pixel_bit_depth = "16";
            csi_pixel_bit_depth = "16";
            mode_type = "yuv";
            pixel_phase = "uyvy";

            active_w = "2880";
            active_h = "1860";
            readout_orientation = "0";
            line_length = "2250";
            inherent_gain = "1";

            pix_clk_hz = "757"; //not use
//            serdes_pix_clk_hz =  "237500000";
            serdes_pix_clk_hz =  "375000000";

            gain_factor = "10";
            min_gain_val = "0";                         /* dB */
            max_gain_val = "300";                       /* dB */
            step_gain_val = "3";                        /* 0.3 */
            default_gain = "0";
            min_hdr_ratio = "1";
            max_hdr_ratio = "1";
            framerate_factor = "1000000";
            min_framerate = "30000000";
            max_framerate = "30000000";
            step_framerate = "1";
            default_framerate = "30000000";
            exposure_factor = "1000000";
            min_exp_time = "24";                        /* us 1 line */
            max_exp_time = "33333";
            step_exp_time = "1";
            default_exp_time = "33333";                 /* us */
            embedded_metadata_height = "0";
          };
          ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
              reg = <0>;
              imx490_out2: endpoint {
                vc-id = <0>;
                port-index = <2>;
                bus-width = <4>;
                remote-endpoint = <&csi_in2>;
              };
            };
          };

          gmsl-link {
            src-csi-port = "b";         /* Port at which sensor is connected to its serializer device. */
            dst-csi-port = "a";         /* Destination CSI port on the Jetson side, connected at deserializer. */
            serdes-csi-link = "a";      /* GMSL link sensor/serializer connected */
            csi-mode = "1x4";           /*  to sensor CSI mode. */
            st-vc = <0>;                /* Sensor source default VC ID: 0 unless overridden by sensor. */
            vc-id = <0>;                /* Destination VC ID, assigned to sensor stream by deserializer. */
            num-lanes=<4>;              /* Number of CSI lanes used. */
            streams = "ued-u1", "yuv8"; /* Types of streams sensor is streaming. */
          };
      };
      };
    };
  };

fragment@63{
    //target-path = "/i2c@3180000/tca9546@70";
    target= <&tca9546_70>;
    __overlay__ {
      i2c@2 {
        reg = <2>;
        i2c-mux,deselect-on-exit;
        #address-cells = <0x01>;
        #size-cells = <0x00>;

        max9296_dser_c: max9296@48 {
          compatible = "nvidia,tier4_max9296";
          status = "okay";
          reg = <0x48>;
          csi-mode = "2x4";
          max-src = <2>;
          //reset-gpios = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
          reset-gpios = <&tegra_main_gpio 0xA2 0x0>;
        };
        max9295_prim@62 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x62>;
          is-prim-ser;
        };
        max9295_ser_c_0: max9295_a@42 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x42>;
          nvidia,gmsl-dser-device = <&max9296_dser_c>;
        };
        max9295_ser_c_1: max9295_b@60 {
          compatible = "nvidia,tier4_max9295";
          status = "okay";
          reg = <0x60>;
          nvidia,gmsl-dser-device = <&max9296_dser_c>;
        };
        isp_f: gw5300_b@6f {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6f>;
        };
        isp_e: gw5300_a@6e {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6e>;
        };
        isp_prim_c: gw5300_prim@6d {
          compatible = "nvidia,tier4_gw5300";
          status = "okay";
          reg = <0x6d>;
          is-prim-isp;
        };
  
        imx490_f@2c {
          compatible = "nvidia,tier4_imx490";
          reg = <0x2c>;
          status = "okay";

          def-addr = <0x1a>;
          /* Define any required hw resources needed by driver */
          /* ie. clocks, io pins, power sources */
          clocks = <&bpmp 36U>,
          <&bpmp 36U>;
          clock-names = "extperiph1", "pllp_grtba";
          mclk = "extperiph1";
          nvidia,isp-device = <&isp_f>;           // for C2 camera
          nvidia,gmsl-ser-device = <&max9295_ser_c_1>;
          nvidia,gmsl-dser-device = <&max9296_dser_c>;

          /* Physical dimensions of sensor */
          physical_w = "15.0";
          physical_h = "12.5";
          reg_mux = <2>;
          sensor_model ="imx490";

          fsync-mode = "false";

          distortion-correction = "false";

          auto-exposure = "true";

          /* Defines number of frames to be dropped by driver internally after applying */
          /* sensor crop settings. Some sensors send corrupt frames after applying */
          /* crop co-ordinates */
          post_crop_frame_drop = "0";

          /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
          use_decibel_gain = "true";

          /* enable CID_SENSOR_MODE_ID for sensor modes selection */
          use_sensor_mode_id = "true";

          mode0 {
            /*mode imx490_MODE_2880X1860_CROP_30FPS*/
            mclk_khz = "24000";
            num_lanes = "4";
            tegra_sinterface = "serial_d";
            vc_id = "1";
            discontinuous_clk = "no";
            dpcm_enable = "false";
            cil_settletime = "0";
            dynamic_pixel_bit_depth = "16";
            csi_pixel_bit_depth = "16";
            mode_type = "yuv";
            pixel_phase = "uyvy";

            active_w = "2880";
            active_h = "1860";
            readout_orientation = "0";
            line_length = "2250";
            inherent_gain = "1";
            
            pix_clk_hz = "757"; //not use
//            serdes_pix_clk_hz =  "237500000";
            serdes_pix_clk_hz =  "375000000";

            gain_factor = "10";
            min_gain_val = "0"; /* dB */
            max_gain_val = "300"; /* dB */
            step_gain_val = "3"; /* 0.3 */
            default_gain = "0";
            min_hdr_ratio = "1";
            max_hdr_ratio = "1";
            framerate_factor = "1000000";
            min_framerate = "30000000";
            max_framerate = "30000000";
            step_framerate = "1";
            default_framerate = "30000000";
            exposure_factor = "1000000";
            min_exp_time = "24"; /* us 1 line */
            max_exp_time = "33333";
            step_exp_time = "1";
            default_exp_time = "33333";/* us */
            embedded_metadata_height = "0";
          };

          ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
              reg = <0>;
              imx490_out5: endpoint {
                vc-id = <1>;
                port-index = <4>;
                bus-width = <4>;
                remote-endpoint = <&csi_in5>;
              };
            };
          };
          gmsl-link {
            src-csi-port = "b";
            dst-csi-port = "a";
            serdes-csi-link = "b";
            csi-mode = "1x4";
            st-vc = <0>;
            vc-id = <1>;
            num-lanes=<4>;
            streams = "ued-u1","yuv8";
          };
        };
      
        imx490_e@2b {
          status = "okay";
          def-addr = <0x1a>;
          mclk = "extperiph1";
          clocks = <&bpmp 36U>, <&bpmp 36U>;
          clock-names = "extperiph1", "pllp_grtba";
          nvidia,isp-device = <&isp_e>;           // for C2 camera
          nvidia,gmsl-ser-device = <&max9295_ser_c_0>;
          nvidia,gmsl-dser-device = <&max9296_dser_c>;

          // common modul;e
          compatible = "nvidia,tier4_imx490";
          reg = <0x2b>;

          /* Physical dimensions of sensor */
          physical_w = "15.0";
          physical_h = "12.5";
          reg_mux = <2>;
          sensor_model ="imx490";

          fsync-mode = "false";

          distortion-correction = "false";

          auto-exposure = "true";

          /* Defines number of frames to be dropped by driver internally after applying */
          /* sensor crop settings. Some sensors send corrupt frames after applying */
          /* crop co-ordinates */
          post_crop_frame_drop = "0";

          /* Convert Gain to unit of dB (decibel) befor passing to kernel driver */
          use_decibel_gain = "true";

          /* enable CID_SENSOR_MODE_ID for sensor modes selection */
          use_sensor_mode_id = "true";

          mode0 {
            /*mode imx490_MODE_1920X1860_CROP_30FPS*/
            mclk_khz = "24000";
            num_lanes = "4";
            tegra_sinterface = "serial_c";
            vc_id = "0";
            discontinuous_clk = "no";
            dpcm_enable = "false";
            cil_settletime = "0";
            dynamic_pixel_bit_depth = "16";
            csi_pixel_bit_depth = "16";
            mode_type = "yuv";
            pixel_phase = "uyvy";

            active_w = "2880";
            active_h = "1860";
            readout_orientation = "0";
            line_length = "2250";
            inherent_gain = "1";

            pix_clk_hz = "757"; //not use
//          serdes_pix_clk_hz =  "237500000";
            serdes_pix_clk_hz =  "375000000";

            gain_factor = "10";
            min_gain_val = "0";                         /* dB */
            max_gain_val = "300";                       /* dB */
            step_gain_val = "3";                        /* 0.3 */
            default_gain = "0";
            min_hdr_ratio = "1";
            max_hdr_ratio = "1";
            framerate_factor = "1000000";
            min_framerate = "30000000";
            max_framerate = "30000000";
            step_framerate = "1";
            default_framerate = "30000000";
            exposure_factor = "1000000";
            min_exp_time = "24";                        /* us 1 line */
            max_exp_time = "33333";
            step_exp_time = "1";
            default_exp_time = "33333";                 /* us */
            embedded_metadata_height = "0";
          };
          ports {
            #address-cells = <1>;
            #size-cells = <0>;
            port@0 {
              reg = <0>;
              imx490_out4: endpoint {
                vc-id = <0>;
                port-index = <4>;
                bus-width = <4>;
                remote-endpoint = <&csi_in4>;
              };
            };
          };

          gmsl-link {
            src-csi-port = "b";         /* Port at which sensor is connected to its serializer device. */
            dst-csi-port = "a";         /* Destination CSI port on the Jetson side, connected at deserializer. */
            serdes-csi-link = "a";      /* GMSL link sensor/serializer connected */
            csi-mode = "1x4";           /*  to sensor CSI mode. */
            st-vc = <0>;                /* Sensor source default VC ID: 0 unless overridden by sensor. */
            vc-id = <0>;                /* Destination VC ID, assigned to sensor stream by deserializer. */
            num-lanes=<4>;              /* Number of CSI lanes used. */
            streams = "ued-u1", "yuv8"; /* Types of streams sensor is streaming. */
          };
      };
      };
    };
  };
};
